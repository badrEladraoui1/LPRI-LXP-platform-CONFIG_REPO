server:
  port: 9090

spring:
  redis:
    host: localhost
    port: 6379
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      default-filters:
        - TokenRelay
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            key-resolver: "#{@ipKeyResolver}"
      routes:
        - id: user-management-service
          uri: lb://user-management-service
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
                fallbackUri: forward:/fallback/user-management-service
        - id: onboarding-service
          uri: lb://onboarding-service
          predicates:
            - Path=/api/onboarding/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: onboardingServiceCircuitBreaker
                fallbackUri: forward:/fallback/onboarding-service
        - id: admin-service
          uri: lb://admin-service
          predicates:
            - Path=/api/admins/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: adminServiceCircuitBreaker
                fallbackUri: forward:/fallback/admin-service

  security:
    oauth2:
      client:
        provider:
          keycloak:
#            issuer-uri: http://localhost:8080/realms/demo-gateway-lxp
            issuer-uri: http://localhost:8080/realms/lxp-platform-realm

            user-name-attribute: preferred_username
        registration:
          keycloak:
#            client-id: gateway-api-lxp-test
            client-id: spring-backend-client
#            client-secret: bexkpa6A8VQUpnIf3GLX0ihrqZ72WqFT 
#            client-secret: Wx0tc8rCwwSFTuYiIlAqMEq1flv03i2s // current one trying .env.local solution
            scope: openid
      resourceserver:
        jwt:
#          issuer-uri: http://localhost:8080/realms/demo-gateway-lxp
          issuer-uri: http://localhost:8080/realms/lxp-platform-realm



eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoint:
    gateway:
      enabled: true


resilience4j:
  circuitbreaker:
    instances:
      userServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    ma.emsi.lpri: DEBUG  # Your package name
    # Add for specific converters
    org.springframework.security.oauth2.server.resource.authentication: TRACE
    # Set to INFO in production
